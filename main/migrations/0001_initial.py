# Generated by Django 5.2.4 on 2025-08-26 18:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bulim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name="Bo'lim nomi")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
            ],
            options={
                'verbose_name': "Bo'lim",
                'verbose_name_plural': "Bo'limlar",
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Fakultet nomi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
            ],
            options={
                'verbose_name': 'Fakultet',
                'verbose_name_plural': 'Fakultetlar',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12')], unique=True, verbose_name='Semestr raqami')),
            ],
            options={
                'verbose_name': 'Semestr',
                'verbose_name_plural': 'Semestrlar',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Fan nomi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
            ],
            options={
                'verbose_name': 'Fan',
                'verbose_name_plural': 'Fanlar',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Universitet nomi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
            ],
            options={
                'verbose_name': 'Universitet',
                'verbose_name_plural': 'Universitetlar',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Guruh nomi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='main.faculty', verbose_name='Fakultet')),
            ],
            options={
                'verbose_name': 'Guruh',
                'verbose_name_plural': 'Guruhlar',
            },
        ),
        migrations.CreateModel(
            name='Kafedra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Kafedra nomi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kafedralar', to='main.faculty', verbose_name='Fakultet')),
            ],
            options={
                'verbose_name': 'Kafedra',
                'verbose_name_plural': 'Kafedralar',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('teacher', 'O‘qituvchi'), ('controller', 'Controller'), ('student', 'Talaba'), ('tutor', 'Tutor'), ('employee', 'Xodim')], default='student', max_length=20)),
                ('access_code', models.CharField(blank=True, max_length=5, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='main_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='main_user_set', to='auth.permission', verbose_name='user permissions')),
                ('bulim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='main.bulim', verbose_name="Bo'lim")),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='main.group', verbose_name='Guruh')),
                ('kafedra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tutors', to='main.kafedra', verbose_name='Kafedra')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi',
                'verbose_name_plural': 'Foydalanuvchilar',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255, verbose_name='Harakat')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
            ],
            options={
                'verbose_name': 'Log',
                'verbose_name_plural': 'Loglar',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Savol matni')),
                ('question_type', models.CharField(choices=[('single_choice', 'Bitta to‘g‘ri javob'), ('multiple_choice', 'Ko‘p to‘g‘ri javob'), ('fill_in_blank', 'Bo‘sh joyni to‘ldirish'), ('sentence_ordering', 'Jumlalarni tartiblash'), ('true_false', 'To‘g‘ri/Yolg‘on'), ('matching', 'Moslashtirish')], max_length=20, verbose_name='Savol turi')),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions/', verbose_name='Rasm')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yangilangan sana')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Yaratuvchi')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='main.subject', verbose_name='Fan')),
            ],
            options={
                'verbose_name': 'Savol',
                'verbose_name_plural': 'Savollar',
            },
        ),
        migrations.CreateModel(
            name='AnswerOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, verbose_name='Javob matni')),
                ('is_correct', models.BooleanField(default=False, verbose_name='To‘g‘ri javobmi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('left', models.CharField(blank=True, max_length=255, null=True, verbose_name='So‘z (chap)')),
                ('right', models.CharField(blank=True, max_length=255, null=True, verbose_name='Javob (o‘ng)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='matching_answers/', verbose_name='Matching javob rasm')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_options', to='main.question', verbose_name='Savol')),
            ],
            options={
                'verbose_name': 'Javob varianti',
                'verbose_name_plural': 'Javob variantlari',
            },
        ),
        migrations.CreateModel(
            name='StudentTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='Boshlangan vaqt')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Tugagan vaqt')),
                ('total_score', models.FloatField(default=0, verbose_name='Umumiy ball')),
                ('completed', models.BooleanField(default=False, verbose_name='Tugatilganmi')),
                ('question_ids', models.JSONField(blank=True, default=list, verbose_name='Tanlangan savollar ID')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_tests', to=settings.AUTH_USER_MODEL, verbose_name='Talaba')),
            ],
            options={
                'verbose_name': 'Talaba testi',
                'verbose_name_plural': 'Talaba testlari',
            },
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, null=True, verbose_name='Matnli javob')),
                ('is_correct', models.BooleanField(default=False, verbose_name='To‘g‘ri javobmi')),
                ('score', models.FloatField(default=0, verbose_name='Ball')),
                ('answer_option', models.ManyToManyField(blank=True, to='main.answeroption', verbose_name='Tanlangan javoblar')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.question', verbose_name='Savol')),
                ('student_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='main.studenttest', verbose_name='Talaba testi')),
            ],
            options={
                'verbose_name': 'Talaba javobi',
                'verbose_name_plural': 'Talaba javoblari',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_count', models.PositiveIntegerField(verbose_name='Savollar soni')),
                ('total_score', models.PositiveIntegerField(verbose_name='Umumiy ball')),
                ('duration', models.DurationField(verbose_name='Test muddati')),
                ('minutes', models.PositiveIntegerField(default=30, verbose_name='Test vaqti (daqiqa)')),
                ('active', models.BooleanField(default=True, verbose_name='Faol testmi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('start_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Boshlanish vaqti')),
                ('bulim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tests', to='main.bulim', verbose_name="Bo'lim")),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tests', to=settings.AUTH_USER_MODEL, verbose_name='Yaratuvchi (Controller)')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='main.group', verbose_name='Guruh')),
                ('kafedra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tests', to='main.kafedra', verbose_name='Kafedra')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='main.subject', verbose_name='Fan')),
            ],
            options={
                'verbose_name': 'Test',
                'verbose_name_plural': 'Testlar',
            },
        ),
        migrations.AddField(
            model_name='studenttest',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_tests', to='main.test', verbose_name='Test'),
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(verbose_name='Savol balli')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_questions', to='main.question', verbose_name='Savol')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_questions', to='main.test', verbose_name='Test')),
            ],
            options={
                'verbose_name': 'Test savoli',
                'verbose_name_plural': 'Test savollari',
            },
        ),
        migrations.AddField(
            model_name='faculty',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculties', to='main.university', verbose_name='Universitet'),
        ),
        migrations.CreateModel(
            name='GroupSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bulim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulim_subjects', to='main.bulim', verbose_name="Bo'lim")),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_subjects', to='main.group', verbose_name='Guruh')),
                ('kafedra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kafedra_subjects', to='main.kafedra', verbose_name='Kafedra')),
                ('semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_subjects', to='main.semester', verbose_name='Semestr')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_subjects', to='main.subject', verbose_name='Fan')),
            ],
            options={
                'verbose_name': 'Guruh/Bulim/Kafedra fani',
                'verbose_name_plural': 'Guruh/Bulim/Kafedra fanlari',
                'constraints': [models.UniqueConstraint(condition=models.Q(('group__isnull', False)), fields=('group', 'subject', 'semester'), name='unique_group_subject_semester'), models.UniqueConstraint(condition=models.Q(('bulim__isnull', False)), fields=('bulim', 'subject'), name='unique_bulim_subject'), models.UniqueConstraint(condition=models.Q(('kafedra__isnull', False)), fields=('kafedra', 'subject'), name='unique_kafedra_subject')],
            },
        ),
    ]
